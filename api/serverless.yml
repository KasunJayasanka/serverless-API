service: api

frameworkVersion: "3"

provider:
    name: aws
    runtime: nodejs18.x
    profile: serverlessUser
    stage: dev
    # region: ap-southeast-1
    environment:
        tableName: ${self:custom.tableName}
        bucketName: ${self:custom.bucketName}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:* 
              - s3:*
          Resource: '*'
    apiKeys:
        - MFApiKey 

plugins:
    - serverless-webpack

package:
    individually: true

custom:
    tableName: player-points
    bucketName: myserverlessprojectuploadbucketkj-768287889 
    s3Sync:
        - bucktName: ${self:custom.bucketName}
          localDir: UploadData

functions:
    getUser:
        handler: lambdas/endpoints/getUser.handler
        events:
            - http:
                  path: get-user/{ID}
                  method: GET
                  cors: true
                  private: true
    getPlayerPoints:
        handler: lambdas/endpoints/getPlayerScore.handler
        events:
            - http:
                  path: get-player-score/{ID}
                  method: GET
                  cors: true
    createPlayerPoints:
        handler: lambdas/endpoints/createPlayerScore.handler
        events:
            - http:
                  path: create-player-score/{ID}
                  method: POST
                  cors: true
    createFile:
        handler: lambdas/endpoints/createFile.handler
        events:
            - http:
                  path: create-file/{fileName}
                  method: POST
                  cors: true
    getFile:
        handler: lambdas/endpoints/getFile.handler
        events:
            - http:
                  path: create-file/{fileName}
                  method: POST
                  cors: true

resources:
    Resources:
        DemoBucketUpload:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: myserverlessprojectuploadbucket-kj-12312
        # FileUploadToBucket:
        #     Type: AWS::S3::Bucket
        #     Properties:
        #         TableName: ${self:custom.bucketName}
        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        